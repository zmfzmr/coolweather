<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    
    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary">
        <TextView
            android:id="@+id/title_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerInParent="true"
            android:textColor="#fff"
            android:textSize="20dp"/>
        <!-- 这里是相对布局的话，如果前面有空间的话，空间都是位于左上方的-->
        <Button
            android:id="@+id/back_button"
            android:layout_width="25dp"
            android:layout_height="25dp"
            android:layout_marginLeft="10dp"
            android:layout_alignParentLeft="true"
            android:layout_centerVertical="true"
            android:background="@drawable/ic_back"/>
    </RelativeLayout>

    <ListView
        android:id="@+id/list_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>
    <!--
        布局文件中的内容并不复杂，我们现实定义了一个头布局（相对布局）作为标题栏，
        将布局高度设置为actionBar的高度，背景色设置为colorPrimary。
        然后在头布局中放置了一个TextView用于显示标题内容，放置了一个Button用于执行返回操作，
        注意：我已经提前准备好了一张ic_back.png图片用于作为按钮的背景图。
        这里之所以要自己定义标题栏，是因为碎片中最好不要直接使用ActionBar或Toolbar,
        不然在复用的时候可能会出现一些你不想看到的效果

        2.接下来在头布局的下面定义了一个ListView，省市县的数据都将显示咋这类，之所以这里使用ListVIew，
            是因为它会自动给每个子项之间添加一条分隔线，而如果使用RecyclerView想实现同样的功能则会比较麻烦，
            这里我们总是选择最优的实现方案
    -->

</LinearLayout>